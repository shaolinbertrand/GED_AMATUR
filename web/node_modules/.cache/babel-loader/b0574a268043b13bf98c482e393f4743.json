{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CPD\\\\AppData\\\\Local\\\\GitHubDesktop\\\\meus projetos\\\\GED_AMATUR\\\\web\\\\src\\\\pages\\\\uploadContrato.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport api from \"../services/api\";\nimport React, { useEffect, useState } from 'react';\nimport { StyledDropZone } from 'react-drop-zone';\nimport 'react-drop-zone/dist/styles.css';\nimport '../styles/pages/CriarUser.css';\nimport Sidebar from \"../components/Sidebar\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport FileList from \"../components/FileList\";\nimport { Container } from \"../components/FileList/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst text = {\n  fontWeight: \"bold\",\n  cursor: \"pointer\",\n  textAlign: \"center\",\n  fontSize: \"0.7em\",\n  color: \"#000000\",\n  flexDirection: \"row\",\n  marginLeft: '17px',\n  marginRight: '17px',\n  marginTop: '10px'\n};\nexport default function UploadFile(props) {\n  _s();\n\n  const history = useHistory();\n  const [file, setFile] = useState('');\n  const [tipoValidade, setTipoV] = useState('');\n  const [numero, setNumero] = useState('');\n  const [name, setName] = useState('');\n  const [progress, setProgress] = useState('');\n  useEffect(() => {\n    api.get(`/empresa/${props.match.params.id}`).then(todo => {\n      setName(todo.data.name);\n    });\n  }, []);\n\n  const AtualizaBarraCirlcular = ({\n    progress\n  }) => {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          styles: {\n            root: {\n              width: 24\n            },\n            path: {\n              stroke: \"#7159c1\"\n            }\n          },\n          strokeWidth: 10,\n          value: progress,\n          text: ``\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this);\n  };\n\n  async function handleSubmit() {\n    console.log(file);\n    let formData = new FormData();\n    formData.append('contrato', file);\n    formData.append('tipoValidade', tipoValidade);\n    formData.append('numero', numero);\n    const response = await api.put(`/empresa/doc/${props.match.params.id}`, formData, {\n      onUploadProgress: e => {\n        const progress = parseInt(Math.round(e.loaded * 100 / e.total));\n        setProgress(progress);\n      },\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n\n    if (response.status == 200) {\n      const log = api.post(`/log/user/${localStorage.getItem('id_login')}`, {\n        acao: \"Enviou um novo arquivo para o Contrato \" + props.match.params.id\n      });\n      alert('Upload realizada com sucesso!!');\n      history.push(`/Empresadoc/${props.match.params.id}/${name}/${props.match.params.registro}`);\n    } else {\n      alert(response.statusText);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-CreateUser\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: [\"Novo Contrato \", name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"tipoValidade\",\n              children: \"Tipo de Validade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"tipoValidade\",\n              value: tipoValidade,\n              onChange: event => setTipoV(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-block\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"numeroC\",\n              children: \"Numero de Contrato\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"senha\",\n              value: numero,\n              onChange: event => setNumero(event.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledDropZone, {\n            onDrop: (file, text) => setFile(file),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: !file ? 'Adicione o contrato aqui' : /*#__PURE__*/_jsxDEV(\"h2\", {\n                style: text,\n                children: [\" \", file.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 14\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: \"confirm-button\",\n            type: \"submit\",\n            children: \"Confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AtualizaBarraCirlcular, {\n            value: progress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UploadFile, \"2dCD0fsybibdLCStzthr7TUeyew=\", false, function () {\n  return [useHistory];\n});\n\n_c = UploadFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["C:/Users/CPD/AppData/Local/GitHubDesktop/meus projetos/GED_AMATUR/web/src/pages/uploadContrato.js"],"names":["useHistory","api","React","useEffect","useState","StyledDropZone","Sidebar","CircularProgressbar","FileList","Container","text","fontWeight","cursor","textAlign","fontSize","color","flexDirection","marginLeft","marginRight","marginTop","UploadFile","props","history","file","setFile","tipoValidade","setTipoV","numero","setNumero","name","setName","progress","setProgress","get","match","params","id","then","todo","data","AtualizaBarraCirlcular","root","width","path","stroke","handleSubmit","console","log","formData","FormData","append","response","put","onUploadProgress","e","parseInt","Math","round","loaded","total","headers","status","post","localStorage","getItem","acao","alert","push","registro","statusText","event","target","value"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router-dom\";\r\nimport api from \"../services/api\";\r\nimport React, {useEffect, useState} from 'react'\r\nimport { StyledDropZone } from 'react-drop-zone'\r\nimport 'react-drop-zone/dist/styles.css'\r\nimport '../styles/pages/CriarUser.css';\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport {CircularProgressbar} from \"react-circular-progressbar\";\r\nimport FileList from \"../components/FileList\";\r\nimport { Container } from \"../components/FileList/styles\";\r\n\r\nconst text = {\r\n  fontWeight: \"bold\",\r\n   cursor: \"pointer\",\r\n   textAlign:\"center\",\r\n   fontSize: \"0.7em\",\r\n   color: \"#000000\",\r\n   flexDirection: \"row\",\r\n   marginLeft:'17px',\r\n   marginRight:'17px',\r\n   marginTop:'10px' \r\n  }  \r\n\r\nexport default function UploadFile(props) {\r\n\r\n  const history = useHistory()\r\n\r\n  const [file, setFile] = useState('')\r\n  const [tipoValidade, setTipoV] = useState('')\r\n  const [numero, setNumero] = useState('')\r\n  const [name, setName] = useState('')\r\n  const [progress,setProgress] = useState('')\r\n\r\n  useEffect(()=>{\r\n     api.get(`/empresa/${props.match.params.id}`)\r\n  .then( todo=> {\r\n    setName(todo.data.name)\r\n  }\r\n  );\r\n  },[])\r\n\r\n  const AtualizaBarraCirlcular = ({progress}) => {\r\n    return(\r\n    <Container>\r\n      <div>\r\n        <CircularProgressbar\r\n                styles={{\r\n                  root: { width: 24 },\r\n                  path: { stroke: \"#7159c1\" }\r\n                }}\r\n                strokeWidth={10}\r\n                value={progress}\r\n                text={``}\r\n                />\r\n      </div>\r\n    </Container>\r\n    )\r\n  }\r\n\r\n  async function handleSubmit() {\r\n\r\n    console.log(file)\r\n    let formData = new FormData();\r\n      formData.append('contrato', file);\r\n      formData.append('tipoValidade',tipoValidade);\r\n      formData.append('numero',numero);\r\n    const response = await api.put(`/empresa/doc/${props.match.params.id}`,\r\n        formData, { \r\n          onUploadProgress: e => {\r\n            const progress = parseInt(Math.round((e.loaded * 100) / e.total));\r\n            setProgress(progress)\r\n          },\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data',\r\n              }\r\n        } \r\n      )\r\n    if(response.status == 200){\r\n      const log = api.post(`/log/user/${localStorage.getItem('id_login')}`,{\r\n        acao:\"Enviou um novo arquivo para o Contrato \"+props.match.params.id\r\n      })\r\n      alert('Upload realizada com sucesso!!')\r\n      history.push(`/Empresadoc/${props.match.params.id}/${name}/${props.match.params.registro}`)\r\n    }else{\r\n      alert(response.statusText)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-CreateUser\">\r\n\r\n    <Sidebar />\r\n\r\n      <main>\r\n      <div className=\"create-form\" >\r\n          <fieldset>\r\n  <legend>Novo Contrato {name}</legend>\r\n            \r\n            <div className=\"input-block\"> \r\n              <label htmlFor=\"tipoValidade\">Tipo de Validade</label>\r\n              <input id=\"tipoValidade\" \r\n              value={tipoValidade} \r\n              onChange={event => setTipoV(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"numeroC\">Numero de Contrato</label >\r\n              <input id=\"senha\"\r\n              value={numero} \r\n              onChange={event => setNumero(event.target.value)} />\r\n            </div>\r\n\r\n            <StyledDropZone\r\n            onDrop={(file, text) => setFile(file)}\r\n            >\r\n            <div>\r\n            {\r\n             !file ?\r\n              'Adicione o contrato aqui' :\r\n             <h2 style={text}> {file.name}</h2>\r\n            }  \r\n           </div>\r\n              </StyledDropZone>\r\n             \r\n            <button onClick={handleSubmit}  className=\"confirm-button\"  type=\"submit\">\r\n              Confirmar\r\n            </button>\r\n            <AtualizaBarraCirlcular value={progress}/>\r\n          </fieldset>\r\n\r\n          \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}