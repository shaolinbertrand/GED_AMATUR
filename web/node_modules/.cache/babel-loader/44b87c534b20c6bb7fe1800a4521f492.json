{"ast":null,"code":"/*! @license DOMPurify 2.4.0 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.4.0/LICENSE */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, function () {\n  'use strict';\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    }, _typeof(obj);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _construct(Parent, args, Class) {\n    if (_isNativeReflectConstruct()) {\n      _construct = Reflect.construct;\n    } else {\n      _construct = function _construct(Parent, args, Class) {\n        var a = [null];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) _setPrototypeOf(instance, Class.prototype);\n        return instance;\n      };\n    }\n\n    return _construct.apply(null, arguments);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      getPrototypeOf = Object.getPrototypeOf,\n      getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n  var freeze = Object.freeze,\n      seal = Object.seal,\n      create = Object.create; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return _construct(Func, _toConsumableArray(args));\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n  var regExpTest = unapply(RegExp.prototype.test);\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /* Add properties to a lookup table */\n\n\n  function addToSet(set, array, transformCaseFunc) {\n    transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n\n    while (l--) {\n      var element = array[l];\n\n      if (typeof element === 'string') {\n        var lcElement = transformCaseFunc(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /* Shallow clone an object */\n\n\n  function clone(object) {\n    var newObject = create(null);\n    var property;\n\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n  /* IE10 doesn't support __lookupGetter__ so lets'\r\n   * simulate it. It also automatically checks\r\n   * if the prop is function or getter and behaves\r\n   * accordingly. */\n\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      var desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  var html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  var svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  var svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  var mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  var mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  var text = freeze(['#text']);\n  var html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  var svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  var mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  var ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  var DOCTYPE_NAME = seal(/^html$/i);\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n  /**\r\n   * Creates a no-op policy for internal use only.\r\n   * Don't export this function outside this module!\r\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\r\n   * @param {Document} document The document object (to determine policy name suffix)\r\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\r\n   * are not supported).\r\n   */\n\n\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if (_typeof(trustedTypes) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html) {\n          return html;\n        },\n        createScriptURL: function createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n    /**\r\n     * Version label, exposed for easier checks\r\n     * if DOMPurify is up to date or not\r\n     */\n\n\n    DOMPurify.version = '2.4.0';\n    /**\r\n     * Array of elements that DOMPurify removed during sanitation.\r\n     * Empty if nothing was removed.\r\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        Element = window.Element,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === void 0 ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        HTMLFormElement = window.HTMLFormElement,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n    var ElementPrototype = Element.prototype;\n    var cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    var getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    var getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    var getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n\n    var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        createDocumentFragment = _document.createDocumentFragment,\n        getElementsByTagName = _document.getElementsByTagName;\n    var importNode = originalDocument.importNode;\n    var documentMode = {};\n\n    try {\n      documentMode = clone(document).documentMode ? document.documentMode : {};\n    } catch (_) {}\n\n    var hooks = {};\n    /**\r\n     * Expose whether this browser supports running the full DOMPurify.\r\n     */\n\n    DOMPurify.isSupported = typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined' && documentMode !== 9;\n    var MUSTACHE_EXPR$1 = MUSTACHE_EXPR,\n        ERB_EXPR$1 = ERB_EXPR,\n        DATA_ATTR$1 = DATA_ATTR,\n        ARIA_ATTR$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;\n    /**\r\n     * We consider the elements and attributes below to be safe. Ideally\r\n     * don't add any new ones but feel free to remove unwanted ones.\r\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));\n    /* Allowed attribute names */\n\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));\n    /*\r\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\r\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\r\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\r\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\r\n     */\n\n    var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    var FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    var FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    var ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    var ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Output should be safe for common template engines.\r\n     * This means, DOMPurify removes data attributes, mustaches and ERB\r\n     */\n\n    var SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    var WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    var SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\r\n     * document.body. By default, browsers might move them to document.head */\n\n    var FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\r\n     * string (or a TrustedHTML object if Trusted Types are supported).\r\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\r\n     */\n\n    var RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\r\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    var RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\r\n     * case Trusted Types are not supported  */\n\n    var RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\r\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\r\n     */\n\n    var SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\r\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\r\n     *\r\n     * HTML/DOM spec rules that enable DOM Clobbering:\r\n     *   - Named Access on Window (§7.3.3)\r\n     *   - DOM Tree Accessors (§3.1.5)\r\n     *   - Form Element Parent-Child Relations (§4.10.3)\r\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\r\n     *   - HTMLCollection (§4.2.10.2)\r\n     *\r\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\r\n     * with a constant string, i.e., `user-content-`\r\n     */\n\n    var SANITIZE_NAMED_PROPS = false;\n    var SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n\n    var KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\r\n     * of importing it into a new Document and returning a sanitized copy */\n\n    var IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    var USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    var FORBID_CONTENTS = null;\n    var DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    var MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    var HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    var NAMESPACE = HTML_NAMESPACE;\n    var IS_EMPTY_INPUT = false;\n    /* Parsing of strict XHTML documents */\n\n    var PARSER_MEDIA_TYPE;\n    var SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    var DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    var transformCaseFunc;\n    /* Keep a reference to config to pass to hooks */\n\n    var CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    var isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\r\n     * _parseConfig\r\n     *\r\n     * @param  {Object} cfg optional config literal\r\n     */\n    // eslint-disable-next-line complexity\n\n\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || _typeof(cfg) !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? function (x) {\n        return x;\n      } : stringToLowerCase;\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    var HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n\n    var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Keep track of all possible SVG and MathML tags\r\n     * so that we can perform the namespace checks\r\n     * correctly. */\n\n    var ALL_SVG_TAGS = addToSet({}, svg$1);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    var ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n    /**\r\n     *\r\n     *\r\n     * @param  {Element} element a DOM element whose namespace is being checked\r\n     * @returns {boolean} Return false if the element has a\r\n     *  namespace that a spec-compliant parser would never\r\n     *  return. Return true otherwise.\r\n     */\n\n    var _checkValidNamespace = function _checkValidNamespace(element) {\n      var parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: HTML_NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      var tagName = stringToLowerCase(element.tagName);\n      var parentTagName = stringToLowerCase(parent.tagName);\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG or MathML). Return false just in case.\n\n\n      return false;\n    };\n    /**\r\n     * _forceRemove\r\n     *\r\n     * @param  {Node} node a DOM node\r\n     */\n\n\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        try {\n          node.outerHTML = emptyHTML;\n        } catch (_) {\n          node.remove();\n        }\n      }\n    };\n    /**\r\n     * _removeAttribute\r\n     *\r\n     * @param  {String} name an Attribute name\r\n     * @param  {Node} node a DOM node\r\n     */\n\n\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\r\n     * _initDocument\r\n     *\r\n     * @param  {String} dirty a string of dirty markup\r\n     * @return {Document} a DOM, filled with the dirty markup\r\n     */\n\n\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc;\n      var leadingWhitespace;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\r\n       * Use the DOMParser API by default, fallback later if needs be\r\n       * DOMParser not work for svg when has multiple root element.\r\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      var body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\r\n     * _createIterator\r\n     *\r\n     * @param  {Document} root document/fragment to create iterator for\r\n     * @return {Iterator} iterator instance\r\n     */\n\n\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n    /**\r\n     * _isClobbered\r\n     *\r\n     * @param  {Node} elm element to check for clobbering attacks\r\n     * @return {Boolean} true if clobbered, false if safe\r\n     */\n\n\n    var _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function');\n    };\n    /**\r\n     * _isNode\r\n     *\r\n     * @param  {Node} obj object to check whether it's a DOM node\r\n     * @return {Boolean} true is object is a DOM node\r\n     */\n\n\n    var _isNode = function _isNode(object) {\n      return _typeof(Node) === 'object' ? object instanceof Node : object && _typeof(object) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n    /**\r\n     * _executeHook\r\n     * Execute user configurable hooks\r\n     *\r\n     * @param  {String} entryPoint  Name of the hook's entry point\r\n     * @param  {Node} currentNode node to work on with the hook\r\n     * @param  {Object} data additional hook parameters\r\n     */\n\n\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\r\n     * _sanitizeElements\r\n     *\r\n     * @protect nodeName\r\n     * @protect textContent\r\n     * @protect removeChild\r\n     *\r\n     * @param   {Node} currentNode to check for permission to exist\r\n     * @return  {Boolean} true if node was killed, false if left alive\r\n     */\n\n\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check if tagname contains Unicode */\n\n\n      if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      var tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Mitigate a problem with templates inside select */\n\n\n      if (tagName === 'select' && regExpTest(/<template/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n        /* Keep content except for bad-listed elements */\n\n\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          var parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          var childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            var childCount = childNodes.length;\n\n            for (var i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$1, ' ');\n        content = stringReplace(content, ERB_EXPR$1, ' ');\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\r\n     * _isValidAttribute\r\n     *\r\n     * @param  {string} lcTag Lowercase tag name of containing element.\r\n     * @param  {string} lcName Lowercase attribute name.\r\n     * @param  {string} value Attribute value.\r\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\r\n     */\n    // eslint-disable-next-line complexity\n\n\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\r\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\r\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\r\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName)) ;else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName)) ;else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ;else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ;else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ;else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ;else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, ''))) ;else if (!value) ;else {\n        return false;\n      }\n      return true;\n    };\n    /**\r\n     * _basicCustomElementCheck\r\n     * checks if at least one dash is included in tagName, and it's not the first char\r\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\r\n     * @param {string} tagName name of the tag of the node to sanitize\r\n     */\n\n\n    var _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n    /**\r\n     * _sanitizeAttributes\r\n     *\r\n     * @protect attributes\r\n     * @protect nodeName\r\n     * @protect removeAttribute\r\n     * @protect setAttribute\r\n     *\r\n     * @param  {Node} currentNode to sanitize\r\n     */\n\n\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr;\n      var value;\n      var lcName;\n      var l;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n        value = name === 'value' ? attr.value : stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$1, ' ');\n          value = stringReplace(value, ERB_EXPR$1, ' ');\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        var lcTag = transformCaseFunc(currentNode.nodeName);\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Full DOM Clobbering protection via namespace isolation,\r\n         * Prefix id and name attributes with `user-content-`\r\n         */\n\n\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Handle attributes that require Trusted Types */\n\n\n        if (trustedTypesPolicy && _typeof(trustedTypes) === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ;else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n\n              case 'TrustedScriptURL':\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\r\n     * _sanitizeShadowDOM\r\n     *\r\n     * @param  {DocumentFragment} fragment to iterate over recursively\r\n     */\n\n\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode;\n\n      var shadowIterator = _createIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\r\n     * Sanitize\r\n     * Public method providing core sanitation functionality\r\n     *\r\n     * @param {String|Node} dirty string or DOM node\r\n     * @param {Object} configuration object\r\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty) {\n      var cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var body;\n      var importedNode;\n      var currentNode;\n      var oldNode;\n      var returnNode;\n      /* Make sure we have a string to sanitize.\r\n        DO NOT return early, as this will return the wrong type if\r\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n      /* Check we can run. Otherwise fall back or ignore */\n\n\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          var tagName = transformCaseFunc(dirty.nodeName);\n\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\r\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n      /* If we sanitized `dirty` in-place, return it. */\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot) {\n          /*\r\n            AdoptNode() is not used because internal state is not reset\r\n            (e.g. the past names map of a HTMLFormElement), this is safe\r\n            in theory but we would rather not risk another attack vector.\r\n            The state that is cloned by importNode() is explicitly defined\r\n            by the specs.\r\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\r\n     * Public method to set the configuration once\r\n     * setConfig\r\n     *\r\n     * @param {Object} cfg configuration object\r\n     */\n\n\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\r\n     * Public method to remove the configuration\r\n     * clearConfig\r\n     *\r\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\r\n     * Public method to check if an attribute value is valid.\r\n     * Uses last set config, if any. Otherwise, uses config defaults.\r\n     * isValidAttribute\r\n     *\r\n     * @param  {string} tag Tag name of containing element.\r\n     * @param  {string} attr Attribute name.\r\n     * @param  {string} value Attribute value.\r\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\r\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = transformCaseFunc(tag);\n      var lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\r\n     * AddHook\r\n     * Public method to add DOMPurify hooks\r\n     *\r\n     * @param {String} entryPoint entry point for the hook to add\r\n     * @param {Function} hookFunction function to execute\r\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\r\n     * RemoveHook\r\n     * Public method to remove a DOMPurify hook at a given entryPoint\r\n     * (pops it from the stack of hooks if more are present)\r\n     *\r\n     * @param {String} entryPoint entry point for the hook to remove\r\n     * @return {Function} removed(popped) hook\r\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\r\n     * RemoveHooks\r\n     * Public method to remove all DOMPurify hooks at a given entryPoint\r\n     *\r\n     * @param  {String} entryPoint entry point for the hooks to remove\r\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\r\n     * RemoveAllHooks\r\n     * Public method to remove all DOMPurify hooks\r\n     *\r\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n  return purify;\n});","map":{"version":3,"sources":["../src/utils.js","../src/tags.js","../src/attrs.js","../src/regexp.js","../src/purify.js"],"names":["hasOwnProperty","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","fun","x","Func","arrayForEach","unapply","Array","arrayPop","arrayPush","stringToLowerCase","String","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","RegExp","typeErrorCreate","unconstruct","args","transformCaseFunc","l","array","element","lcElement","set","newObject","property","object","desc","fallbackValue","console","html","svg","svgFilters","svgDisallowed","mathMl","mathMlDisallowed","text","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","getGlobal","_createTrustedTypesPolicy","trustedTypes","suffix","ATTR_NAME","document","policyName","createHTML","createScriptURL","scriptUrl","window","DOMPurify","createDOMPurify","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","lookupGetter","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","documentMode","clone","hooks","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","addToSet","TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","ATTRS","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","value","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","PARSER_MEDIA_TYPE","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","namespaceURI","tagName","parentTagName","Boolean","_forceRemove","node","_removeAttribute","attribute","from","name","_initDocument","dirty","matches","leadingWhitespace","dirtyPayload","doc","body","_createIterator","root","_isClobbered","elm","_isNode","_executeHook","hook","_sanitizeElements","currentNode","allowedTags","_basicCustomElementTest","parentNode","childNodes","childCount","i","content","_isValidAttribute","lcName","lcTag","_sanitizeAttributes","attributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","attr","_sanitizeShadowDOM","shadowIterator","shadowNode","importedNode","nodeIterator","oldNode","returnNode","serializedHTML"],"mappings":"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","sourcesContent":["const {\n  hasOwnProperty,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n} = Object;\n\nlet { freeze, seal, create } = Object; // eslint-disable-line import/no-mutable-exports\nlet { apply, construct } = typeof Reflect !== 'undefined' && Reflect;\n\nif (!apply) {\n  apply = function (fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\n\nif (!freeze) {\n  freeze = function (x) {\n    return x;\n  };\n}\n\nif (!seal) {\n  seal = function (x) {\n    return x;\n  };\n}\n\nif (!construct) {\n  construct = function (Func, args) {\n    return new Func(...args);\n  };\n}\n\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayIndexOf = unapply(Array.prototype.indexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySlice = unapply(Array.prototype.slice);\n\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\n\nconst regExpTest = unapply(RegExp.prototype.test);\n\nconst typeErrorCreate = unconstruct(TypeError);\n\nexport function unapply(func) {\n  return (thisArg, ...args) => apply(func, thisArg, args);\n}\n\nexport function unconstruct(func) {\n  return (...args) => construct(func, args);\n}\n\n/* Add properties to a lookup table */\nexport function addToSet(set, array, transformCaseFunc) {\n  transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n\n        element = lcElement;\n      }\n    }\n\n    set[element] = true;\n  }\n\n  return set;\n}\n\n/* Shallow clone an object */\nexport function clone(object) {\n  const newObject = create(null);\n\n  let property;\n  for (property in object) {\n    if (apply(hasOwnProperty, object, [property])) {\n      newObject[property] = object[property];\n    }\n  }\n\n  return newObject;\n}\n\n/* IE10 doesn't support __lookupGetter__ so lets'\n * simulate it. It also automatically checks\n * if the prop is function or getter and behaves\n * accordingly. */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n\n    object = getPrototypeOf(object);\n  }\n\n  function fallbackValue(element) {\n    console.warn('fallback value for', element);\n    return null;\n  }\n\n  return fallbackValue;\n}\n\nexport {\n  // Array\n  arrayForEach,\n  arrayIndexOf,\n  arrayPop,\n  arrayPush,\n  arraySlice,\n  // Object\n  freeze,\n  getPrototypeOf,\n  getOwnPropertyDescriptor,\n  hasOwnProperty,\n  isFrozen,\n  setPrototypeOf,\n  seal,\n  // RegExp\n  regExpTest,\n  // String\n  stringIndexOf,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringTrim,\n  // Errors\n  typeErrorCreate,\n  // Other\n  lookupGetter,\n};\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'a',\n  'abbr',\n  'acronym',\n  'address',\n  'area',\n  'article',\n  'aside',\n  'audio',\n  'b',\n  'bdi',\n  'bdo',\n  'big',\n  'blink',\n  'blockquote',\n  'body',\n  'br',\n  'button',\n  'canvas',\n  'caption',\n  'center',\n  'cite',\n  'code',\n  'col',\n  'colgroup',\n  'content',\n  'data',\n  'datalist',\n  'dd',\n  'decorator',\n  'del',\n  'details',\n  'dfn',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'element',\n  'em',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'font',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hgroup',\n  'hr',\n  'html',\n  'i',\n  'img',\n  'input',\n  'ins',\n  'kbd',\n  'label',\n  'legend',\n  'li',\n  'main',\n  'map',\n  'mark',\n  'marquee',\n  'menu',\n  'menuitem',\n  'meter',\n  'nav',\n  'nobr',\n  'ol',\n  'optgroup',\n  'option',\n  'output',\n  'p',\n  'picture',\n  'pre',\n  'progress',\n  'q',\n  'rp',\n  'rt',\n  'ruby',\n  's',\n  'samp',\n  'section',\n  'select',\n  'shadow',\n  'small',\n  'source',\n  'spacer',\n  'span',\n  'strike',\n  'strong',\n  'style',\n  'sub',\n  'summary',\n  'sup',\n  'table',\n  'tbody',\n  'td',\n  'template',\n  'textarea',\n  'tfoot',\n  'th',\n  'thead',\n  'time',\n  'tr',\n  'track',\n  'tt',\n  'u',\n  'ul',\n  'var',\n  'video',\n  'wbr',\n]);\n\n// SVG\nexport const svg = freeze([\n  'svg',\n  'a',\n  'altglyph',\n  'altglyphdef',\n  'altglyphitem',\n  'animatecolor',\n  'animatemotion',\n  'animatetransform',\n  'circle',\n  'clippath',\n  'defs',\n  'desc',\n  'ellipse',\n  'filter',\n  'font',\n  'g',\n  'glyph',\n  'glyphref',\n  'hkern',\n  'image',\n  'line',\n  'lineargradient',\n  'marker',\n  'mask',\n  'metadata',\n  'mpath',\n  'path',\n  'pattern',\n  'polygon',\n  'polyline',\n  'radialgradient',\n  'rect',\n  'stop',\n  'style',\n  'switch',\n  'symbol',\n  'text',\n  'textpath',\n  'title',\n  'tref',\n  'tspan',\n  'view',\n  'vkern',\n]);\n\nexport const svgFilters = freeze([\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n]);\n\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nexport const svgDisallowed = freeze([\n  'animate',\n  'color-profile',\n  'cursor',\n  'discard',\n  'fedropshadow',\n  'font-face',\n  'font-face-format',\n  'font-face-name',\n  'font-face-src',\n  'font-face-uri',\n  'foreignobject',\n  'hatch',\n  'hatchpath',\n  'mesh',\n  'meshgradient',\n  'meshpatch',\n  'meshrow',\n  'missing-glyph',\n  'script',\n  'set',\n  'solidcolor',\n  'unknown',\n  'use',\n]);\n\nexport const mathMl = freeze([\n  'math',\n  'menclose',\n  'merror',\n  'mfenced',\n  'mfrac',\n  'mglyph',\n  'mi',\n  'mlabeledtr',\n  'mmultiscripts',\n  'mn',\n  'mo',\n  'mover',\n  'mpadded',\n  'mphantom',\n  'mroot',\n  'mrow',\n  'ms',\n  'mspace',\n  'msqrt',\n  'mstyle',\n  'msub',\n  'msup',\n  'msubsup',\n  'mtable',\n  'mtd',\n  'mtext',\n  'mtr',\n  'munder',\n  'munderover',\n]);\n\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nexport const mathMlDisallowed = freeze([\n  'maction',\n  'maligngroup',\n  'malignmark',\n  'mlongdiv',\n  'mscarries',\n  'mscarry',\n  'msgroup',\n  'mstack',\n  'msline',\n  'msrow',\n  'semantics',\n  'annotation',\n  'annotation-xml',\n  'mprescripts',\n  'none',\n]);\n\nexport const text = freeze(['#text']);\n","import { freeze } from './utils.js';\n\nexport const html = freeze([\n  'accept',\n  'action',\n  'align',\n  'alt',\n  'autocapitalize',\n  'autocomplete',\n  'autopictureinpicture',\n  'autoplay',\n  'background',\n  'bgcolor',\n  'border',\n  'capture',\n  'cellpadding',\n  'cellspacing',\n  'checked',\n  'cite',\n  'class',\n  'clear',\n  'color',\n  'cols',\n  'colspan',\n  'controls',\n  'controlslist',\n  'coords',\n  'crossorigin',\n  'datetime',\n  'decoding',\n  'default',\n  'dir',\n  'disabled',\n  'disablepictureinpicture',\n  'disableremoteplayback',\n  'download',\n  'draggable',\n  'enctype',\n  'enterkeyhint',\n  'face',\n  'for',\n  'headers',\n  'height',\n  'hidden',\n  'high',\n  'href',\n  'hreflang',\n  'id',\n  'inputmode',\n  'integrity',\n  'ismap',\n  'kind',\n  'label',\n  'lang',\n  'list',\n  'loading',\n  'loop',\n  'low',\n  'max',\n  'maxlength',\n  'media',\n  'method',\n  'min',\n  'minlength',\n  'multiple',\n  'muted',\n  'name',\n  'nonce',\n  'noshade',\n  'novalidate',\n  'nowrap',\n  'open',\n  'optimum',\n  'pattern',\n  'placeholder',\n  'playsinline',\n  'poster',\n  'preload',\n  'pubdate',\n  'radiogroup',\n  'readonly',\n  'rel',\n  'required',\n  'rev',\n  'reversed',\n  'role',\n  'rows',\n  'rowspan',\n  'spellcheck',\n  'scope',\n  'selected',\n  'shape',\n  'size',\n  'sizes',\n  'span',\n  'srclang',\n  'start',\n  'src',\n  'srcset',\n  'step',\n  'style',\n  'summary',\n  'tabindex',\n  'title',\n  'translate',\n  'type',\n  'usemap',\n  'valign',\n  'value',\n  'width',\n  'xmlns',\n  'slot',\n]);\n\nexport const svg = freeze([\n  'accent-height',\n  'accumulate',\n  'additive',\n  'alignment-baseline',\n  'ascent',\n  'attributename',\n  'attributetype',\n  'azimuth',\n  'basefrequency',\n  'baseline-shift',\n  'begin',\n  'bias',\n  'by',\n  'class',\n  'clip',\n  'clippathunits',\n  'clip-path',\n  'clip-rule',\n  'color',\n  'color-interpolation',\n  'color-interpolation-filters',\n  'color-profile',\n  'color-rendering',\n  'cx',\n  'cy',\n  'd',\n  'dx',\n  'dy',\n  'diffuseconstant',\n  'direction',\n  'display',\n  'divisor',\n  'dur',\n  'edgemode',\n  'elevation',\n  'end',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'filter',\n  'filterunits',\n  'flood-color',\n  'flood-opacity',\n  'font-family',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-style',\n  'font-variant',\n  'font-weight',\n  'fx',\n  'fy',\n  'g1',\n  'g2',\n  'glyph-name',\n  'glyphref',\n  'gradientunits',\n  'gradienttransform',\n  'height',\n  'href',\n  'id',\n  'image-rendering',\n  'in',\n  'in2',\n  'k',\n  'k1',\n  'k2',\n  'k3',\n  'k4',\n  'kerning',\n  'keypoints',\n  'keysplines',\n  'keytimes',\n  'lang',\n  'lengthadjust',\n  'letter-spacing',\n  'kernelmatrix',\n  'kernelunitlength',\n  'lighting-color',\n  'local',\n  'marker-end',\n  'marker-mid',\n  'marker-start',\n  'markerheight',\n  'markerunits',\n  'markerwidth',\n  'maskcontentunits',\n  'maskunits',\n  'max',\n  'mask',\n  'media',\n  'method',\n  'mode',\n  'min',\n  'name',\n  'numoctaves',\n  'offset',\n  'operator',\n  'opacity',\n  'order',\n  'orient',\n  'orientation',\n  'origin',\n  'overflow',\n  'paint-order',\n  'path',\n  'pathlength',\n  'patterncontentunits',\n  'patterntransform',\n  'patternunits',\n  'points',\n  'preservealpha',\n  'preserveaspectratio',\n  'primitiveunits',\n  'r',\n  'rx',\n  'ry',\n  'radius',\n  'refx',\n  'refy',\n  'repeatcount',\n  'repeatdur',\n  'restart',\n  'result',\n  'rotate',\n  'scale',\n  'seed',\n  'shape-rendering',\n  'specularconstant',\n  'specularexponent',\n  'spreadmethod',\n  'startoffset',\n  'stddeviation',\n  'stitchtiles',\n  'stop-color',\n  'stop-opacity',\n  'stroke-dasharray',\n  'stroke-dashoffset',\n  'stroke-linecap',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke',\n  'stroke-width',\n  'style',\n  'surfacescale',\n  'systemlanguage',\n  'tabindex',\n  'targetx',\n  'targety',\n  'transform',\n  'transform-origin',\n  'text-anchor',\n  'text-decoration',\n  'text-rendering',\n  'textlength',\n  'type',\n  'u1',\n  'u2',\n  'unicode',\n  'values',\n  'viewbox',\n  'visibility',\n  'version',\n  'vert-adv-y',\n  'vert-origin-x',\n  'vert-origin-y',\n  'width',\n  'word-spacing',\n  'wrap',\n  'writing-mode',\n  'xchannelselector',\n  'ychannelselector',\n  'x',\n  'x1',\n  'x2',\n  'xmlns',\n  'y',\n  'y1',\n  'y2',\n  'z',\n  'zoomandpan',\n]);\n\nexport const mathMl = freeze([\n  'accent',\n  'accentunder',\n  'align',\n  'bevelled',\n  'close',\n  'columnsalign',\n  'columnlines',\n  'columnspan',\n  'denomalign',\n  'depth',\n  'dir',\n  'display',\n  'displaystyle',\n  'encoding',\n  'fence',\n  'frame',\n  'height',\n  'href',\n  'id',\n  'largeop',\n  'length',\n  'linethickness',\n  'lspace',\n  'lquote',\n  'mathbackground',\n  'mathcolor',\n  'mathsize',\n  'mathvariant',\n  'maxsize',\n  'minsize',\n  'movablelimits',\n  'notation',\n  'numalign',\n  'open',\n  'rowalign',\n  'rowlines',\n  'rowspacing',\n  'rowspan',\n  'rspace',\n  'rquote',\n  'scriptlevel',\n  'scriptminsize',\n  'scriptsizemultiplier',\n  'selection',\n  'separator',\n  'separators',\n  'stretchy',\n  'subscriptshift',\n  'supscriptshift',\n  'symmetric',\n  'voffset',\n  'width',\n  'xmlns',\n]);\n\nexport const xml = freeze([\n  'xlink:href',\n  'xml:id',\n  'xlink:title',\n  'xml:space',\n  'xmlns:xlink',\n]);\n","import { seal } from './utils.js';\n\n// eslint-disable-next-line unicorn/better-regex\nexport const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nexport const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nexport const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\nexport const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nexport const IS_ALLOWED_URI = seal(\n  /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nexport const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nexport const ATTR_WHITESPACE = seal(\n  /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nexport const DOCTYPE_NAME = seal(/^html$/i);\n","import * as TAGS from './tags.js';\nimport * as ATTRS from './attrs.js';\nimport * as EXPRESSIONS from './regexp.js';\nimport {\n  addToSet,\n  clone,\n  freeze,\n  arrayForEach,\n  arrayPop,\n  arrayPush,\n  stringMatch,\n  stringReplace,\n  stringToLowerCase,\n  stringIndexOf,\n  stringTrim,\n  regExpTest,\n  typeErrorCreate,\n  lookupGetter,\n} from './utils.js';\n\nconst getGlobal = () => (typeof window === 'undefined' ? null : window);\n\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n * @param {Document} document The document object (to determine policy name suffix)\n * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n * are not supported).\n */\nconst _createTrustedTypesPolicy = function (trustedTypes, document) {\n  if (\n    typeof trustedTypes !== 'object' ||\n    typeof trustedTypes.createPolicy !== 'function'\n  ) {\n    return null;\n  }\n\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (\n    document.currentScript &&\n    document.currentScript.hasAttribute(ATTR_NAME)\n  ) {\n    suffix = document.currentScript.getAttribute(ATTR_NAME);\n  }\n\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      },\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn(\n      'TrustedTypes policy ' + policyName + ' could not be created.'\n    );\n    return null;\n  }\n};\n\nfunction createDOMPurify(window = getGlobal()) {\n  const DOMPurify = (root) => createDOMPurify(root);\n\n  /**\n   * Version label, exposed for easier checks\n   * if DOMPurify is up to date or not\n   */\n  DOMPurify.version = VERSION;\n\n  /**\n   * Array of elements that DOMPurify removed during sanitation.\n   * Empty if nothing was removed.\n   */\n  DOMPurify.removed = [];\n\n  if (!window || !window.document || window.document.nodeType !== 9) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n\n    return DOMPurify;\n  }\n\n  const originalDocument = window.document;\n\n  let { document } = window;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes,\n  } = window;\n\n  const ElementPrototype = Element.prototype;\n\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n\n  const trustedTypesPolicy = _createTrustedTypesPolicy(\n    trustedTypes,\n    originalDocument\n  );\n  const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName,\n  } = document;\n  const { importNode } = originalDocument;\n\n  let documentMode = {};\n  try {\n    documentMode = clone(document).documentMode ? document.documentMode : {};\n  } catch (_) {}\n\n  let hooks = {};\n\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported =\n    typeof getParentNode === 'function' &&\n    implementation &&\n    typeof implementation.createHTMLDocument !== 'undefined' &&\n    documentMode !== 9;\n\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n  } = EXPRESSIONS;\n\n  let { IS_ALLOWED_URI } = EXPRESSIONS;\n\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [\n    ...TAGS.html,\n    ...TAGS.svg,\n    ...TAGS.svgFilters,\n    ...TAGS.mathMl,\n    ...TAGS.text,\n  ]);\n\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [\n    ...ATTRS.html,\n    ...ATTRS.svg,\n    ...ATTRS.mathMl,\n    ...ATTRS.xml,\n  ]);\n\n  /*\n   * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  const CUSTOM_ELEMENT_HANDLING = Object.seal(\n    Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null,\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false,\n      },\n    })\n  );\n\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, [\n    'annotation-xml',\n    'audio',\n    'colgroup',\n    'desc',\n    'foreignobject',\n    'head',\n    'iframe',\n    'math',\n    'mi',\n    'mn',\n    'mo',\n    'ms',\n    'mtext',\n    'noembed',\n    'noframes',\n    'noscript',\n    'plaintext',\n    'script',\n    'style',\n    'svg',\n    'template',\n    'thead',\n    'title',\n    'video',\n    'xmp',\n  ]);\n\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, [\n    'audio',\n    'video',\n    'img',\n    'source',\n    'image',\n    'track',\n  ]);\n\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, [\n    'alt',\n    'class',\n    'for',\n    'id',\n    'label',\n    'name',\n    'pattern',\n    'placeholder',\n    'role',\n    'summary',\n    'title',\n    'value',\n    'style',\n    'xmlns',\n  ]);\n\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc;\n\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n\n  const formElement = document.createElement('form');\n\n  const isRegexOrFunction = function (testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n\n  /**\n   * _parseConfig\n   *\n   * @param  {Object} cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function (cfg) {\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n\n    PARSER_MEDIA_TYPE =\n      // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1\n        ? (PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE)\n        : (PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE);\n\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc =\n      PARSER_MEDIA_TYPE === 'application/xhtml+xml'\n        ? (x) => x\n        : stringToLowerCase;\n\n    /* Set configuration parameters */\n    ALLOWED_TAGS =\n      'ALLOWED_TAGS' in cfg\n        ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc)\n        : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR =\n      'ALLOWED_ATTR' in cfg\n        ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc)\n        : DEFAULT_ALLOWED_ATTR;\n    URI_SAFE_ATTRIBUTES =\n      'ADD_URI_SAFE_ATTR' in cfg\n        ? addToSet(\n            clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n            cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS =\n      'ADD_DATA_URI_TAGS' in cfg\n        ? addToSet(\n            clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n            cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n            transformCaseFunc // eslint-disable-line indent\n          ) // eslint-disable-line indent\n        : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS =\n      'FORBID_CONTENTS' in cfg\n        ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc)\n        : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS =\n      'FORBID_TAGS' in cfg\n        ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc)\n        : {};\n    FORBID_ATTR =\n      'FORBID_ATTR' in cfg\n        ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc)\n        : {};\n    USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)\n    ) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck =\n        cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n\n    if (\n      cfg.CUSTOM_ELEMENT_HANDLING &&\n      typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements ===\n        'boolean'\n    ) {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements =\n        cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, [...TAGS.text]);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, TAGS.html);\n        addToSet(ALLOWED_ATTR, ATTRS.html);\n      }\n\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, TAGS.svgFilters);\n        addToSet(ALLOWED_ATTR, ATTRS.svg);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, TAGS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.mathMl);\n        addToSet(ALLOWED_ATTR, ATTRS.xml);\n      }\n    }\n\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n\n    CONFIG = cfg;\n  };\n\n  const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, [\n    'mi',\n    'mo',\n    'mn',\n    'ms',\n    'mtext',\n  ]);\n\n  const HTML_INTEGRATION_POINTS = addToSet({}, [\n    'foreignobject',\n    'desc',\n    'title',\n    'annotation-xml',\n  ]);\n\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, [\n    'title',\n    'style',\n    'font',\n    'a',\n    'script',\n  ]);\n\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, TAGS.svg);\n  addToSet(ALL_SVG_TAGS, TAGS.svgFilters);\n  addToSet(ALL_SVG_TAGS, TAGS.svgDisallowed);\n\n  const ALL_MATHML_TAGS = addToSet({}, TAGS.mathMl);\n  addToSet(ALL_MATHML_TAGS, TAGS.mathMlDisallowed);\n\n  /**\n   *\n   *\n   * @param  {Element} element a DOM element whose namespace is being checked\n   * @returns {boolean} Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function (element) {\n    let parent = getParentNode(element);\n\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: HTML_NAMESPACE,\n        tagName: 'template',\n      };\n    }\n\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n\n      // The only way to switch from MathML to SVG is via\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return (\n          tagName === 'svg' &&\n          (parentTagName === 'annotation-xml' ||\n            MATHML_TEXT_INTEGRATION_POINTS[parentTagName])\n        );\n      }\n\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (\n        parent.namespaceURI === SVG_NAMESPACE &&\n        !HTML_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      if (\n        parent.namespaceURI === MATHML_NAMESPACE &&\n        !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]\n      ) {\n        return false;\n      }\n\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return (\n        !ALL_MATHML_TAGS[tagName] &&\n        (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName])\n      );\n    }\n\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG or MathML). Return false just in case.\n    return false;\n  };\n\n  /**\n   * _forceRemove\n   *\n   * @param  {Node} node a DOM node\n   */\n  const _forceRemove = function (node) {\n    arrayPush(DOMPurify.removed, { element: node });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      node.parentNode.removeChild(node);\n    } catch (_) {\n      try {\n        node.outerHTML = emptyHTML;\n      } catch (_) {\n        node.remove();\n      }\n    }\n  };\n\n  /**\n   * _removeAttribute\n   *\n   * @param  {String} name an Attribute name\n   * @param  {Node} node a DOM node\n   */\n  const _removeAttribute = function (name, node) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: node.getAttributeNode(name),\n        from: node,\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: node,\n      });\n    }\n\n    node.removeAttribute(name);\n\n    // We void attribute values for unremovable \"is\"\" attributes\n    if (name === 'is' && !ALLOWED_ATTR[name]) {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(node);\n        } catch (_) {}\n      } else {\n        try {\n          node.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n\n  /**\n   * _initDocument\n   *\n   * @param  {String} dirty a string of dirty markup\n   * @return {Document} a DOM, filled with the dirty markup\n   */\n  const _initDocument = function (dirty) {\n    /* Create a HTML document */\n    let doc;\n    let leadingWhitespace;\n\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml') {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty =\n        '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' +\n        dirty +\n        '</body></html>';\n    }\n\n    const dirtyPayload = trustedTypesPolicy\n      ? trustedTypesPolicy.createHTML(dirty)\n      : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? '' : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n\n    const body = doc.body || doc.documentElement;\n\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(\n        document.createTextNode(leadingWhitespace),\n        body.childNodes[0] || null\n      );\n    }\n\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(\n        doc,\n        WHOLE_DOCUMENT ? 'html' : 'body'\n      )[0];\n    }\n\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n\n  /**\n   * _createIterator\n   *\n   * @param  {Document} root document/fragment to create iterator for\n   * @return {Iterator} iterator instance\n   */\n  const _createIterator = function (root) {\n    return createNodeIterator.call(\n      root.ownerDocument || root,\n      root,\n      // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT,\n      null,\n      false\n    );\n  };\n\n  /**\n   * _isClobbered\n   *\n   * @param  {Node} elm element to check for clobbering attacks\n   * @return {Boolean} true if clobbered, false if safe\n   */\n  const _isClobbered = function (elm) {\n    return (\n      elm instanceof HTMLFormElement &&\n      (typeof elm.nodeName !== 'string' ||\n        typeof elm.textContent !== 'string' ||\n        typeof elm.removeChild !== 'function' ||\n        !(elm.attributes instanceof NamedNodeMap) ||\n        typeof elm.removeAttribute !== 'function' ||\n        typeof elm.setAttribute !== 'function' ||\n        typeof elm.namespaceURI !== 'string' ||\n        typeof elm.insertBefore !== 'function')\n    );\n  };\n\n  /**\n   * _isNode\n   *\n   * @param  {Node} obj object to check whether it's a DOM node\n   * @return {Boolean} true is object is a DOM node\n   */\n  const _isNode = function (object) {\n    return typeof Node === 'object'\n      ? object instanceof Node\n      : object &&\n          typeof object === 'object' &&\n          typeof object.nodeType === 'number' &&\n          typeof object.nodeName === 'string';\n  };\n\n  /**\n   * _executeHook\n   * Execute user configurable hooks\n   *\n   * @param  {String} entryPoint  Name of the hook's entry point\n   * @param  {Node} currentNode node to work on with the hook\n   * @param  {Object} data additional hook parameters\n   */\n  const _executeHook = function (entryPoint, currentNode, data) {\n    if (!hooks[entryPoint]) {\n      return;\n    }\n\n    arrayForEach(hooks[entryPoint], (hook) => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  };\n\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   *\n   * @param   {Node} currentNode to check for permission to exist\n   * @return  {Boolean} true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function (currentNode) {\n    let content;\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeElements', currentNode, null);\n\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check if tagname contains Unicode */\n    if (regExpTest(/[\\u0080-\\uFFFF]/, currentNode.nodeName)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n\n    /* Execute a hook if present */\n    _executeHook('uponSanitizeElement', currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS,\n    });\n\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (\n      currentNode.hasChildNodes() &&\n      !_isNode(currentNode.firstElementChild) &&\n      (!_isNode(currentNode.content) ||\n        !_isNode(currentNode.content.firstElementChild)) &&\n      regExpTest(/<[/\\w]/g, currentNode.innerHTML) &&\n      regExpTest(/<[/\\w]/g, currentNode.textContent)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Mitigate a problem with templates inside select */\n    if (\n      tagName === 'select' &&\n      regExpTest(/<template/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n          regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)\n        )\n          return false;\n        if (\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n          CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)\n        )\n          return false;\n      }\n\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n\n          for (let i = childCount - 1; i >= 0; --i) {\n            parentNode.insertBefore(\n              cloneNode(childNodes[i], true),\n              getNextSibling(currentNode)\n            );\n          }\n        }\n      }\n\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    if (\n      (tagName === 'noscript' || tagName === 'noembed') &&\n      regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)\n    ) {\n      _forceRemove(currentNode);\n      return true;\n    }\n\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      content = stringReplace(content, MUSTACHE_EXPR, ' ');\n      content = stringReplace(content, ERB_EXPR, ' ');\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        currentNode.textContent = content;\n      }\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeElements', currentNode, null);\n\n    return false;\n  };\n\n  /**\n   * _isValidAttribute\n   *\n   * @param  {string} lcTag Lowercase tag name of containing element.\n   * @param  {string} lcName Lowercase attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function (lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (\n      SANITIZE_DOM &&\n      (lcName === 'id' || lcName === 'name') &&\n      (value in document || value in formElement)\n    ) {\n      return false;\n    }\n\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (\n      ALLOW_DATA_ATTR &&\n      !FORBID_ATTR[lcName] &&\n      regExpTest(DATA_ATTR, lcName)\n    ) {\n      // This attribute is safe\n    } else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) {\n      // This attribute is safe\n      /* Otherwise, check the name is permitted */\n    } else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n        // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        (_basicCustomElementTest(lcTag) &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag))) &&\n          ((CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName)) ||\n            (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)))) ||\n        // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        (lcName === 'is' &&\n          CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements &&\n          ((CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp &&\n            regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value)) ||\n            (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function &&\n              CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))))\n      ) {\n        // If user has supplied a regexp or function in CUSTOM_ELEMENT_HANDLING.tagNameCheck, we need to also allow derived custom elements using the same tagName test.\n        // Additionally, we need to allow attributes passing the CUSTOM_ELEMENT_HANDLING.attributeNameCheck user has configured, as custom elements can define these at their own discretion.\n      } else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) {\n      // This attribute is safe\n      /* Check no script, data or unknown possibly unsafe URI\n        unless we know URI values are safe for that attribute */\n    } else if (\n      regExpTest(IS_ALLOWED_URI, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Keep image data URIs alive if src/xlink:href is allowed */\n      /* Further prevent gadget XSS for dynamically built script tags */\n    } else if (\n      (lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') &&\n      lcTag !== 'script' &&\n      stringIndexOf(value, 'data:') === 0 &&\n      DATA_URI_TAGS[lcTag]\n    ) {\n      // This attribute is safe\n      /* Allow unknown protocols: This provides support for links that\n        are handled by protocol handlers which may be unknown ahead of\n        time, e.g. fb:, spotify: */\n    } else if (\n      ALLOW_UNKNOWN_PROTOCOLS &&\n      !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))\n    ) {\n      // This attribute is safe\n      /* Check for binary attributes */\n      // eslint-disable-next-line no-negated-condition\n    } else if (!value) {\n      // Binary attributes are safe at this point\n      /* Anything else, presume unsafe, do not add it back */\n    } else {\n      return false;\n    }\n\n    return true;\n  };\n\n  /**\n   * _basicCustomElementCheck\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   * @param {string} tagName name of the tag of the node to sanitize\n   */\n  const _basicCustomElementTest = function (tagName) {\n    return tagName.indexOf('-') > 0;\n  };\n\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param  {Node} currentNode to sanitize\n   */\n  const _sanitizeAttributes = function (currentNode) {\n    let attr;\n    let value;\n    let lcName;\n    let l;\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n    const { attributes } = currentNode;\n\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes) {\n      return;\n    }\n\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n    };\n    l = attributes.length;\n\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      attr = attributes[l];\n      const { name, namespaceURI } = attr;\n      value = name === 'value' ? attr.value : stringTrim(attr.value);\n      lcName = transformCaseFunc(name);\n\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n\n      /* Work around a security issue in jQuery 3.0 */\n      if (regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        value = stringReplace(value, MUSTACHE_EXPR, ' ');\n        value = stringReplace(value, ERB_EXPR, ' ');\n      }\n\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n\n      /* Handle attributes that require Trusted Types */\n      if (\n        trustedTypesPolicy &&\n        typeof trustedTypes === 'object' &&\n        typeof trustedTypes.getAttributeType === 'function'\n      ) {\n        if (namespaceURI) {\n          /* Namespaces are not yet supported, see https://bugs.chromium.org/p/chromium/issues/detail?id=1305293 */\n        } else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              value = trustedTypesPolicy.createHTML(value);\n              break;\n            case 'TrustedScriptURL':\n              value = trustedTypesPolicy.createScriptURL(value);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n\n        arrayPop(DOMPurify.removed);\n      } catch (_) {}\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeAttributes', currentNode, null);\n  };\n\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param  {DocumentFragment} fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function (fragment) {\n    let shadowNode;\n    const shadowIterator = _createIterator(fragment);\n\n    /* Execute a hook if present */\n    _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n    while ((shadowNode = shadowIterator.nextNode())) {\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(shadowNode)) {\n        continue;\n      }\n\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(shadowNode);\n    }\n\n    /* Execute a hook if present */\n    _executeHook('afterSanitizeShadowDOM', fragment, null);\n  };\n\n  /**\n   * Sanitize\n   * Public method providing core sanitation functionality\n   *\n   * @param {String|Node} dirty string or DOM node\n   * @param {Object} configuration object\n   */\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty, cfg = {}) {\n    let body;\n    let importedNode;\n    let currentNode;\n    let oldNode;\n    let returnNode;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      // eslint-disable-next-line no-negated-condition\n      if (typeof dirty.toString !== 'function') {\n        throw typeErrorCreate('toString is not a function');\n      } else {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      }\n    }\n\n    /* Check we can run. Otherwise fall back or ignore */\n    if (!DOMPurify.isSupported) {\n      if (\n        typeof window.toStaticHTML === 'object' ||\n        typeof window.toStaticHTML === 'function'\n      ) {\n        if (typeof dirty === 'string') {\n          return window.toStaticHTML(dirty);\n        }\n\n        if (_isNode(dirty)) {\n          return window.toStaticHTML(dirty.outerHTML);\n        }\n      }\n\n      return dirty;\n    }\n\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate(\n            'root node is forbidden and cannot be sanitized in-place'\n          );\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (\n        !RETURN_DOM &&\n        !SAFE_FOR_TEMPLATES &&\n        !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1\n      ) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n          ? trustedTypesPolicy.createHTML(dirty)\n          : dirty;\n      }\n\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n\n    /* Get node iterator */\n    const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n    /* Now start iterating over the created document */\n    while ((currentNode = nodeIterator.nextNode())) {\n      /* Fix IE's strange behavior with manipulated textNodes #89 */\n      if (currentNode.nodeType === 3 && currentNode === oldNode) {\n        continue;\n      }\n\n      /* Sanitize tags and elements */\n      if (_sanitizeElements(currentNode)) {\n        continue;\n      }\n\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n\n      /* Check attributes, sanitize if necessary */\n      _sanitizeAttributes(currentNode);\n\n      oldNode = currentNode;\n    }\n\n    oldNode = null;\n\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n\n      if (ALLOWED_ATTR.shadowroot) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n\n      return returnNode;\n    }\n\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n    /* Serialize doctype if allowed */\n    if (\n      WHOLE_DOCUMENT &&\n      ALLOWED_TAGS['!doctype'] &&\n      body.ownerDocument &&\n      body.ownerDocument.doctype &&\n      body.ownerDocument.doctype.name &&\n      regExpTest(EXPRESSIONS.DOCTYPE_NAME, body.ownerDocument.doctype.name)\n    ) {\n      serializedHTML =\n        '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n      serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n    }\n\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE\n      ? trustedTypesPolicy.createHTML(serializedHTML)\n      : serializedHTML;\n  };\n\n  /**\n   * Public method to set the configuration once\n   * setConfig\n   *\n   * @param {Object} cfg configuration object\n   */\n  DOMPurify.setConfig = function (cfg) {\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n\n  /**\n   * Public method to remove the configuration\n   * clearConfig\n   *\n   */\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n\n  /**\n   * Public method to check if an attribute value is valid.\n   * Uses last set config, if any. Otherwise, uses config defaults.\n   * isValidAttribute\n   *\n   * @param  {string} tag Tag name of containing element.\n   * @param  {string} attr Attribute name.\n   * @param  {string} value Attribute value.\n   * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n   */\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n\n  /**\n   * AddHook\n   * Public method to add DOMPurify hooks\n   *\n   * @param {String} entryPoint entry point for the hook to add\n   * @param {Function} hookFunction function to execute\n   */\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n\n    hooks[entryPoint] = hooks[entryPoint] || [];\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n\n  /**\n   * RemoveHook\n   * Public method to remove a DOMPurify hook at a given entryPoint\n   * (pops it from the stack of hooks if more are present)\n   *\n   * @param {String} entryPoint entry point for the hook to remove\n   * @return {Function} removed(popped) hook\n   */\n  DOMPurify.removeHook = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      return arrayPop(hooks[entryPoint]);\n    }\n  };\n\n  /**\n   * RemoveHooks\n   * Public method to remove all DOMPurify hooks at a given entryPoint\n   *\n   * @param  {String} entryPoint entry point for the hooks to remove\n   */\n  DOMPurify.removeHooks = function (entryPoint) {\n    if (hooks[entryPoint]) {\n      hooks[entryPoint] = [];\n    }\n  };\n\n  /**\n   * RemoveAllHooks\n   * Public method to remove all DOMPurify hooks\n   *\n   */\n  DOMPurify.removeAllHooks = function () {\n    hooks = {};\n  };\n\n  return DOMPurify;\n}\n\nexport default createDOMPurify();\n"]},"metadata":{},"sourceType":"script"}