[{"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\index.js":"1","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\App.js":"2","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\routes.js":"3","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\user.js":"4","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listUser.js":"5","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\login.js":"6","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listUserAtivos.js":"7","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\inicial.js":"8","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\criarADM.js":"9","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\criarUser.js":"10","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listarADM.js":"11","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\inicialUser.js":"12","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\ListUserInativos.js":"13","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\ADM.js":"14","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listarDoc.js":"15","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\inicialAdm.js":"16","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\services\\api.js":"17","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\components\\Sidebar.js":"18"},{"size":199,"mtime":1618234932000,"results":"19","hashOfConfig":"20"},{"size":161,"mtime":1618234932000,"results":"21","hashOfConfig":"20"},{"size":1692,"mtime":1622925961000,"results":"22","hashOfConfig":"20"},{"size":1739,"mtime":1622925111000,"results":"23","hashOfConfig":"20"},{"size":3049,"mtime":1622921732000,"results":"24","hashOfConfig":"20"},{"size":2402,"mtime":1622921989000,"results":"25","hashOfConfig":"20"},{"size":3064,"mtime":1622925207000,"results":"26","hashOfConfig":"20"},{"size":924,"mtime":1618234938000,"results":"27","hashOfConfig":"20"},{"size":2739,"mtime":1622662272000,"results":"28","hashOfConfig":"20"},{"size":3859,"mtime":1622662678000,"results":"29","hashOfConfig":"20"},{"size":2973,"mtime":1622926104000,"results":"30","hashOfConfig":"20"},{"size":924,"mtime":1613748532000,"results":"31","hashOfConfig":"20"},{"size":3052,"mtime":1622925213000,"results":"32","hashOfConfig":"20"},{"size":1739,"mtime":1622925480000,"results":"33","hashOfConfig":"20"},{"size":1997,"mtime":1622929138000,"results":"34","hashOfConfig":"20"},{"size":689,"mtime":1614002294000,"results":"35","hashOfConfig":"20"},{"size":172,"mtime":1661804460723,"results":"36","hashOfConfig":"20"},{"size":2589,"mtime":1622664371000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bn7kzy",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\index.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\App.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\routes.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\user.js",["82","83"],"\r\nimport api from \"../services/api\";\r\nimport React, {useEffect, useState} from 'react'\r\nimport {BsWrench} from 'react-icons/bs';\r\nimport Sidebar from '../components/Sidebar'\r\nimport '../styles/pages/CriarUser.css';\r\n\r\nconst listStyle = {\r\n    boxShadow: '1px 3px 4px grey',\r\n    borderRadius: '16px',\r\n    margin:'10px',\r\n    padding:'10px',\r\n    background:\"#ffd666\"\r\n     } \r\n\r\nconst text = {\r\n    fontWeight: \"bold\",\r\n     textAlign:\"center\",\r\n     fontSize: \"0.8em\",\r\n     color: \"#000000\",\r\n     marginLeft:'17px',\r\n     marginRight:'17px',\r\n     marginTop:'10px' \r\n    }    \r\n\r\n     \r\n \r\nfunction User(props){\r\n         const [user, setList] = useState([]);\r\n        //const user = api.get(`/usuario/${props.match.params.id}`)\r\n        useEffect(()=>{\r\n            //api.get(\"usuarios?id=60ac05f9498fd53d8c5514ec\")\r\n            api.get(`/usuario/${props.match.params.id}`)\r\n          .then((todo)=> setList(todo.data));\r\n        },[])\r\n        console.log(props.id)\r\n        return (\r\n            \r\n            <div id=\"page-CreateUser\">\r\n                  <Sidebar/>\r\n                  <div className=\"create-user-form\" >\r\n                  <h2 style={text}>USUÁRIO</h2>\r\n\r\n                  \r\n                    <div  style={listStyle}  >\r\n                        <h2 style={text}>Nome: {user.nome}</h2>\r\n                        <h2 style={text}>Cpf: {user.CPF}</h2>\r\n                        <h2 style={text}>Cargo: {user.cargo}</h2>\r\n                        <h2 style={text}>Telefone: {user.telefone}</h2>\r\n                                    \r\n                    </div>                  \r\n                  </div>\r\n               \r\n            </div>\r\n        )   \r\n        \r\n\r\n //adm/cadastrados\r\n\r\n};\r\n\r\nexport default User;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listUser.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\login.js",["84","85","86","87","88"],"import React, { FormEvent, useState, ChangeEvent } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport logoImg from '../images/logo.png';\r\nimport {BiLogIn} from 'react-icons/bi'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../services/api\";\r\nimport '../styles/pages/login.css'\r\nfunction Login(){\r\n\r\n    const history = useHistory()\r\n\r\n    const [name, setName] = useState('')\r\n    const [senha, setPassword] = useState('')\r\n    \r\n    async function handleSubmit() {\r\n      \r\n     console.log(name)\r\n     console.log(senha)\r\n     try{\r\n        const response = await api.get(`/login/?usuario=${name}&senha=${senha}`)\r\n        \r\n\r\n        if(response.status == 200){\r\n           alert('Login realizado com sucesso!!')\r\n           history.push('/admin/inicial')\r\n        }else{\r\n           \r\n        }\r\n     }catch(e){\r\n        alert('Login não realizado!!')\r\n     }\r\n\r\n    \r\n  \r\n    }\r\n   \r\n    return(\r\n        <div id=\"page-login\">\r\n            <aside>\r\n                <header>\r\n                    <img src={logoImg} className=\"CRA-RR\"/>\r\n\r\n                    <h2>Digite seu nome e senha para acessar o sistema</h2>\r\n                </header>\r\n\r\n                <footer>\r\n                    <strong>Boa Vista</strong>\r\n                    <span>Roraima</span>\r\n                </footer>\r\n            </aside>\r\n\r\n            <div className=\"Formulario\">\r\n                <fieldset>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"Nome\">Nome</label >\r\n                        <input id=\"nome\"\r\n                        value={name} \r\n                        onChange={event => setName(event.target.value)} />\r\n                    </div>\r\n                    <div className=\"input-block\">\r\n                        <label htmlFor=\"senha\" show='*'>Senha</label >\r\n                        <input id=\"senha\"\r\n                            value={senha} \r\n                            type=\"password\"\r\n                            onChange={event => setPassword(event.target.value)} />\r\n                    </div>\r\n                    \r\n                    <div onClick={handleSubmit} className=\"Entrar_no_sistema\"> \r\n                        <BiLogIn size={26} color=\"rgba(0, 0, 0, 0.6)\"/>\r\n                    </div>\r\n                </fieldset>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listUserAtivos.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\inicial.js",["89"],"import React from 'react';\r\nimport {BiLogIn} from 'react-icons/bi'\r\nimport '../styles/pages/inicial.css';\r\nimport logoImg from '../images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\nfunction Inicial(){\r\n    return(\r\n        <div id=\"page-inicial\">\r\n            <div className=\"content-wrapper\">\r\n                <img src={logoImg} className=\"CRA-RR\"/>\r\n        \r\n                <main>\r\n                    <h1>Gestão Eletronica de Documentos</h1>\r\n                    <p>Sistema de Arquivos CRA-RR</p>\r\n                </main>\r\n\r\n                <div className='location'>\r\n                    <strong>Boa Vista</strong>\r\n                    <span>Roraima</span>\r\n                </div>\r\n                <Link to=\"/login\" className=\"enter-app\">\r\n                    <BiLogIn size={26} color=\"rgba(0, 0, 0, 0.6)\"/>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inicial;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\criarADM.js",["90","91","92","93","94"],"import React, { FormEvent, useState, ChangeEvent } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../services/api\";\r\n\r\nimport '../styles/pages/CriarAdm.css';\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\n\r\n\r\n function CreateUser() {\r\n\r\n  const history = useHistory()\r\n\r\n  const [name, setName] = useState('')\r\n  const [registro, setregistro] = useState('')\r\n  const [cpf, setCPF] = useState('')\r\n  const [email, setemail] = useState('')\r\n  const [telefone, setTelefone] = useState('')\r\n  const [documento, setdocumento] = useState([])\r\n  \r\n  \r\n  async function handleSubmit() {\r\n\r\n\r\n    const response = await api.post('/novoadm',  {\r\n      name: name,\r\n      telefone: telefone,\r\n      registro:registro,\r\n      email:email,\r\n      cpf:cpf\r\n    })\r\n\r\n    if(response.status == 200){\r\n      alert('Cadastro realizado com sucesso!!')\r\n      history.push('/admin/inicial')\r\n    }else{\r\n      alert(response.statusText)\r\n    }\r\n \r\n  }\r\n\r\n  return (\r\n    <div id=\"page-CreateADM\">\r\n\r\n    <Sidebar />\r\n\r\n      <main>\r\n        <div className=\"create-ADM-form\" >\r\n          <fieldset>\r\n            <legend>Dados</legend>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"name\">Nome</label>\r\n              <input id=\"name\" \r\n              value={name} \r\n              onChange={event => setName(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"CPF\">CPF</label >\r\n              <input id=\"CPF\"\r\n              value={cpf} \r\n              onChange={event => setCPF(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"registro\">N° Registro</label >\r\n              <input id=\"registro\"\r\n              value={registro} \r\n              onChange={event => setregistro(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"email\">email</label >\r\n              <input id=\"email\"\r\n              value={email} \r\n              onChange={event => setemail(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"telefone\">Telefone</label >\r\n              <input id=\"telefone\"\r\n              value={telefone} \r\n              onChange={event => setTelefone(event.target.value)} />\r\n            </div>\r\n            \r\n            <button onClick={handleSubmit}  className=\"confirm-button\"  type=\"submit\">\r\n            Confirmar\r\n          </button>\r\n          </fieldset>\r\n\r\n          \r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateUser;\r\n// return `https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\criarUser.js",["95","96","97"],"import React, { FormEvent, useState, ChangeEvent } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport api from \"../services/api\";\r\n\r\nimport '../styles/pages/CriarUser.css';\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\n\r\n\r\nexport default function CreateUser() {\r\n\r\n  const history = useHistory()\r\n\r\n  const [name, setName] = useState('')\r\n  const [cargo, setCargo] = useState('')\r\n  const [senha, setPassword] = useState('')\r\n  const [CPF, setCPF] = useState('')\r\n  const [Adimin, setAdimin] = useState(false)\r\n  const [Ativo, setAtivo] = useState(true)\r\n  const [telefone, setTelefone] = useState('')\r\n  \r\n  async function handleSubmit() {\r\n    console.log('ssdsdsd')\r\n\r\n\r\n    const response = await api.post('/cadastro',  {\r\n      nome: name,\r\n      telefone: telefone,\r\n      password:senha,\r\n      CPF:CPF,\r\n      cargo: cargo,\r\n      admin: Adimin,\r\n      ativo: Ativo\r\n    })\r\n\r\n    if(response.status == 200){\r\n      alert('Cadastro realizado com sucesso!!')\r\n      history.push('/admin/inicial')\r\n    }else{\r\n      alert(response.statusText)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-CreateUser\">\r\n\r\n    <Sidebar />\r\n\r\n      <main>\r\n      <div className=\"create-user-form\" >\r\n          <fieldset>\r\n            <legend>Dados</legend>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"name\">Nome</label>\r\n              <input id=\"name\" \r\n              value={name} \r\n              onChange={event => setName(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"senha\" show='*'>Senha</label >\r\n              <input id=\"senha\"\r\n              value={senha} \r\n              onChange={event => setPassword(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"cargo\">Cargo</label >\r\n              <input id=\"cargo\"\r\n              value={cargo} \r\n              onChange={event => setCargo(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"telefone\">Telefone</label >\r\n              <input id=\"telefone\"\r\n              value={telefone} \r\n              onChange={event => setTelefone(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"CPF\">CPF</label >\r\n              <input id=\"CPF\"\r\n              value={CPF} \r\n              onChange={event => setCPF(event.target.value)} />\r\n            </div>\r\n\r\n            <div className=\"input-block\">\r\n              <label htmlFor=\"Adimin\">Administrador do Sistema</label>\r\n\r\n              <div className=\"button-select\">\r\n                <button type=\"button\" \r\n                className={Adimin ? 'active' : ''}\r\n                onClick={() => setAdimin(true)}\r\n                >Sim</button>\r\n                <button \r\n                type=\"button\"\r\n                className={!Adimin ? 'active' : ''}\r\n                onClick={() => setAdimin(false)}\r\n                >Não</button>\r\n              </div>\r\n\r\n              <label htmlFor=\"Adimin\">Usuário Ativo</label>\r\n              <div className=\"button-select\">\r\n                <button type=\"button\" \r\n                className={Ativo ? 'active' : ''}\r\n                onClick={() => setAtivo(true)}\r\n                >Sim</button>\r\n                <button \r\n                type=\"button\"\r\n                className={!Ativo ? 'active' : ''}\r\n                onClick={() => setAtivo(false)}\r\n                >Não</button>\r\n              </div>\r\n            </div>\r\n\r\n          </fieldset>\r\n\r\n          <button onClick={handleSubmit} className=\"confirm-button\" type=\"submit\">\r\n            Confirmar\r\n          </button>\r\n          </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n// return `https://a.tile.openstreetmap.org/${z}/${x}/${y}.png`;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listarADM.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\inicialUser.js",["98"],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\ListUserInativos.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\ADM.js",["99","100"],"\nimport api from \"../services/api\";\nimport React, {useEffect, useState} from 'react'\nimport {BsWrench} from 'react-icons/bs';\nimport Sidebar from '../components/Sidebar'\nimport '../styles/pages/CriarUser.css';\n\nconst listStyle = {\n    boxShadow: '1px 3px 4px grey',\n    borderRadius: '16px',\n    margin:'10px',\n    padding:'10px',\n    background:\"#ffd666\"\n     } \n\nconst text = {\n    fontWeight: \"bold\",\n     textAlign:\"center\",\n     fontSize: \"0.8em\",\n     color: \"#000000\",\n     marginLeft:'17px',\n     marginRight:'17px',\n     marginTop:'10px' \n    }    \n\n     \n \nfunction Adm(props){\n         const [user, setList] = useState([]);\n        //const user = api.get(`/usuario/${props.match.params.id}`)\n        useEffect(()=>{\n            //api.get(\"usuarios?id=60ac05f9498fd53d8c5514ec\")\n            api.get(`/adm/${props.match.params.id}`)\n          .then((todo)=> setList(todo.data));\n        },[])\n        console.log(props.id)\n        return (\n            \n            <div id=\"page-CreateUser\">\n                  <Sidebar/>\n                  <div className=\"create-user-form\" >\n                  <h2 style={text}>ADM</h2>\n\n                  \n                    <div  style={listStyle}  >\n                        <h2 style={text}>Nome: {user.name}</h2>\n                        <h2 style={text}>Cpf: {user.CPF}</h2>\n                        <h2 style={text}>Registro: {user.registro}</h2>\n                        <h2 style={text}>Email: {user.email}</h2>\n                        <h2 style={text}>Telefone: {user.telefone}</h2>\n                                    \n                    </div>                  \n                  </div>\n               \n            </div>\n        )   \n        \n\n //adm/cadastrados\n\n};\n\nexport default Adm;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\listarDoc.js",["101","102","103","104","105"],"\r\nimport api from \"../services/api\";\r\nimport React, {useEffect, useState} from 'react'\r\nimport Sidebar from '../components/Sidebar'\r\nimport '../styles/pages/CriarUser.css';\r\nimport {BsWrench} from 'react-icons/bs';\r\nimport {BiArchive} from 'react-icons/bi';\r\nimport {BiPaperclip} from  'react-icons/bi';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst listStyle = {\r\n    cursor: \"pointer\",\r\n    boxShadow: '1px 3px 4px grey',\r\n    borderRadius: '16px',\r\n    margin:'10px',\r\n    padding:'10px',\r\n    flexDirection:'row',\r\n    justifyContent:'space-between',\r\n    height: '50px',\r\n    background:\"#ffd666\"\r\n     } \r\n\r\nconst text = {\r\n    fontWeight: \"bold\",\r\n     cursor: \"pointer\",\r\n     textAlign:\"center\",\r\n     fontSize: \"0.8em\",\r\n     color: \"#000000\",\r\n     flexDirection: \"row\",\r\n     marginLeft:'17px',\r\n     marginRight:'17px',\r\n     marginTop:'10px' \r\n    }    \r\n\r\n     \r\n \r\nfunction DocumentosMap(props){\r\n    const [list, setList] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        api.get(`adm/doc/${props.match.params.id}`)\r\n      .then((todo)=> setList(todo.data));\r\n    },[])\r\n\r\n    function irPraUrl(url) {\r\n        window.location.href=url;\r\n\r\n      }\r\n    \r\n        return (\r\n            \r\n            <div id=\"page-CreateUser\">\r\n                  <Sidebar/>\r\n                  <div className=\"create-user-form\" >\r\n                  <h2 style={text} >{props.match.params.name}</h2>\r\n\r\n                  <ul>  \r\n                {list.map(doc => (\r\n                        <div onClick={() => irPraUrl(doc.url)} style={listStyle}  >\r\n                        \r\n                         <span style={text}>{doc.name}</span>\r\n                            \r\n                          \r\n                        \r\n                           \r\n                       </div>\r\n                       ))}                  \r\n                </ul>\r\n                  </div>\r\n               \r\n            </div>\r\n        )   \r\n        \r\n\r\n //adm/cadastrados\r\n\r\n};\r\n\r\nexport default DocumentosMap;","C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\pages\\inicialAdm.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\services\\api.js",[],"C:\\Users\\CPD\\AppData\\Local\\GitHubDesktop\\meus projetos\\GED_AMATUR\\web\\src\\components\\Sidebar.js",["106","107"],"import React from 'react';\r\nimport {BiLogOut} from  'react-icons/bi'\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../styles/components/Sidebar.css'\r\nimport logoImg from '../images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\nimport {BiUserPin} from 'react-icons/bi'\r\nimport {BsFillPersonPlusFill} from 'react-icons/bs'; \r\nimport {CgUserList} from 'react-icons/cg'\r\nimport {BsCardList} from 'react-icons/bs'\r\n\r\n\r\nexport default function Sidebar(){\r\n    const {logOut} = useHistory();\r\n    return (\r\n        <aside>\r\n                <header>\r\n                    <img src={logoImg} className=\"CRA-RR\"/>\r\n\r\n                    <h2>Escolha a opção desejada</h2>\r\n                </header>\r\n\r\n\r\n                <div className=\"corpo\" >\r\n                    Novo user\r\n                    <Link to=\"/admin/usuario/create\" className=\"enter-app\">\r\n                        <button type=\"button\" className= \"botao\">\r\n                            <BiUserPin size={26} color=\"rgba(0, 0, 0, 0.6)\"/>\r\n                        </button>\r\n                    </Link>\r\n                    <div>Novo Admininstrador</div>\r\n                    <Link to=\"/user/adms/create\" className=\"enter-app\">\r\n                        <button type=\"button\" className= \"botao\">\r\n                            <BsFillPersonPlusFill size={26} color=\"rgba(0, 0, 0, 0.6)\"/>\r\n                        </button>\r\n                    </Link>\r\n                    <div>Listar Usuários</div>\r\n                    <Link to=\"/ativos\" className=\"enter-app\">\r\n                        <button type=\"button\" className= \"botao\">\r\n                            <CgUserList size={26} color=\"rgba(0, 0, 0, 0.6)\"/>\r\n                        </button>\r\n                    </Link>\r\n                    <div>Listar Admininstradores</div>\r\n                    <Link to=\"/admin/listADM\" className=\"enter-app\">\r\n                        <button type=\"button\" className= \"botao\">\r\n                            <BsCardList size={26} color=\"rgba(0, 0, 0, 0.6)\"/>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n                \r\n                <footer>\r\n                    Sair do Sistema\r\n                    <Link to=\"/login\" className=\"enter-app\">\r\n                        <button type=\"button\"  className= \"botao\">\r\n                            < BiLogOut size={24} color=\"FFF\"/>\r\n                        </button>\r\n                    </Link>\r\n                    <strong>Boa Vista</strong>\r\n                    <span>Roraima</span>\r\n                </footer>\r\n            </aside>\r\n    )\r\n}",{"ruleId":"108","severity":1,"message":"109","line":4,"column":9,"nodeType":"110","messageId":"111","endLine":4,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":35,"column":11,"nodeType":"114","endLine":35,"endColumn":13,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"117","line":1,"column":38,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"118","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":23,"column":28,"nodeType":"121","messageId":"122","endLine":23,"endColumn":30},{"ruleId":"123","severity":1,"message":"124","line":41,"column":21,"nodeType":"125","endLine":41,"endColumn":60},{"ruleId":"123","severity":1,"message":"124","line":10,"column":17,"nodeType":"125","endLine":10,"endColumn":56},{"ruleId":"108","severity":1,"message":"116","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"117","line":1,"column":38,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"108","severity":1,"message":"126","line":19,"column":10,"nodeType":"110","messageId":"111","endLine":19,"endColumn":19},{"ruleId":"108","severity":1,"message":"127","line":19,"column":21,"nodeType":"110","messageId":"111","endLine":19,"endColumn":33},{"ruleId":"119","severity":1,"message":"120","line":33,"column":24,"nodeType":"121","messageId":"122","endLine":33,"endColumn":26},{"ruleId":"108","severity":1,"message":"116","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":26},{"ruleId":"108","severity":1,"message":"117","line":1,"column":38,"nodeType":"110","messageId":"111","endLine":1,"endColumn":49},{"ruleId":"119","severity":1,"message":"120","line":36,"column":24,"nodeType":"121","messageId":"122","endLine":36,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":10,"column":17,"nodeType":"125","endLine":10,"endColumn":56},{"ruleId":"108","severity":1,"message":"109","line":4,"column":9,"nodeType":"110","messageId":"111","endLine":4,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":35,"column":11,"nodeType":"114","endLine":35,"endColumn":13,"suggestions":"128"},{"ruleId":"108","severity":1,"message":"109","line":6,"column":9,"nodeType":"110","messageId":"111","endLine":6,"endColumn":17},{"ruleId":"108","severity":1,"message":"129","line":7,"column":9,"nodeType":"110","messageId":"111","endLine":7,"endColumn":18},{"ruleId":"108","severity":1,"message":"130","line":8,"column":9,"nodeType":"110","messageId":"111","endLine":8,"endColumn":20},{"ruleId":"108","severity":1,"message":"118","line":9,"column":10,"nodeType":"110","messageId":"111","endLine":9,"endColumn":14},{"ruleId":"112","severity":1,"message":"113","line":43,"column":7,"nodeType":"114","endLine":43,"endColumn":9,"suggestions":"131"},{"ruleId":"108","severity":1,"message":"132","line":14,"column":12,"nodeType":"110","messageId":"111","endLine":14,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":18,"column":21,"nodeType":"125","endLine":18,"endColumn":60},"no-unused-vars","'BsWrench' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'FormEvent' is defined but never used.","'ChangeEvent' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'documento' is assigned a value but never used.","'setdocumento' is assigned a value but never used.",["134"],"'BiArchive' is defined but never used.","'BiPaperclip' is defined but never used.",["135"],"'logOut' is assigned a value but never used.",{"desc":"136","fix":"137"},{"desc":"136","fix":"138"},{"desc":"136","fix":"139"},"Update the dependencies array to be: [props.match.params.id]",{"range":"140","text":"141"},{"range":"142","text":"141"},{"range":"143","text":"141"},[937,939],"[props.match.params.id]",[898,900],[1086,1088]]